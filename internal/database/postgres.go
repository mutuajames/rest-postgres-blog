/*
	The code generated by sqlc relies on the Go standard library SQL abstraction.
	It means we need to use the appropriate Go SQL driver to instantiate a connection to the database.
	The following file does just this:
*/

package database

import (
	"database/sql"
	"fmt"
	_ "github.com/lib/pq"
)

type Postgres struct {
	DB *sql.DB
}

func NewPostgres(host, user, password string) (*Postgres, error) {
	db, err := sql.Open("postgres", fmt.Sprintf("host = %s user = %s password = %s", host, user, password))
	if err != nil {
		return nil, err
	}

	if err := db.Ping(); err != nil {
		return nil, err
	}

	return &Postgres{
		DB: db,
	}, nil
}
